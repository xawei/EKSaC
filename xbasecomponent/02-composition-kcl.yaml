apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: x-basecomponent-kcl
spec:
  compositeTypeRef:
    apiVersion: consumable.trustbank.sg/v1alpha1
    kind: xBaseComponentKcl
  mode: Pipeline
  pipeline:
  - step: install-eks-addons
    functionRef:
      name: function-kcl
    input:
      apiVersion: krm.kcl.dev/v1alpha1
      kind: KCLInput
      metadata:
        name: "eks-addons"
      spec:
        target: Default
        source: |
          import json
          
          oxr = option("params").oxr
          ocds = option("params").ocds
          
          # Get region from the referenced EKS cluster
          region = ocds[oxr.spec.eksClusterRef]?.Resource?.spec?.location or "ap-southeast-1"
          
          # Default configuration values for different addons
          default_configs = {
            "aws-ebs-csi-driver": {
              controller = {
                tolerations = [
                  {
                    key = "karpenter.sh/nodepool"
                    operator = "Equal"
                    value = "infra"
                    effect = "NoSchedule"
                  }
                ]
              }
            }
            "aws-efs-csi-driver": {
              controller = {
                tolerations = [
                  {
                    key = "karpenter.sh/nodepool"
                    operator = "Equal"
                    value = "infra"
                    effect = "NoSchedule"
                  }
                ]
              }
            }
          }
          
          # Create addon resources for each addon in the list
          items = [
            {
              apiVersion = "eks.aws.upbound.io/v1beta1"
              kind = "Addon"
              metadata.name = oxr.metadata.name + "-" + addon.name.replace("_", "-") + "-addon"
              spec = {
                forProvider = {
                  addonName = addon.name
                  addonVersion = addon.version
                  region = region
                  clusterNameRef.name = oxr.spec.eksClusterRef + "-xplane-eks-cluster"
                  resolveConflicts = "OVERWRITE"
                  configurationValues = json.encode(
                    addon.configurationValues if addon.configurationValues else 
                    default_configs[addon.name] if addon.name in default_configs else {}
                  ) if (addon.configurationValues or addon.name in default_configs) else None
                  tags = {
                    Name = oxr.metadata.name + "-" + addon.name + "-addon"
                    ManagedBy = "crossplane"
                  }
                }
                providerConfigRef.name = "provider-aws-eks"
              }
            }
            for addon in (oxr.spec.eksAddons or [])
          ]
  - step: auto-ready
    functionRef:
      name: function-auto-ready